/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class uk_ac_imperial_lsds_crossbow_device_TheGPU */

#ifndef _Included_uk_ac_imperial_lsds_crossbow_device_TheGPU
#define _Included_uk_ac_imperial_lsds_crossbow_device_TheGPU
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    init
 * Signature: ([IIIIII)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_init
  (JNIEnv *, jobject, jintArray, jint, jint, jint, jint, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    free
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_free
  (JNIEnv *, jobject);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    dump
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_dump
  (JNIEnv *, jobject);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    configureBatchExamples
 * Signature: ([II)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_configureBatchExamples
  (JNIEnv *, jobject, jintArray, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    configureBatchLabels
 * Signature: ([II)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_configureBatchLabels
  (JNIEnv *, jobject, jintArray, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    configureBatchSplits
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_configureBatchSplits
  (JNIEnv *, jobject, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    configureStreams
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_configureStreams
  (JNIEnv *, jobject, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setRandomSeed
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setRandomSeed
  (JNIEnv *, jobject, jlong);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setKernel
 * Signature: (ILjava/lang/String;IIIZ)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setKernel
  (JNIEnv *, jobject, jint, jstring, jint, jint, jint, jboolean);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setKernelInput
 * Signature: (II[II)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setKernelInput
  (JNIEnv *, jobject, jint, jint, jintArray, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setKernelOutput
 * Signature: (I[II)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setKernelOutput
  (JNIEnv *, jobject, jint, jintArray, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setKernelLocalVariable
 * Signature: (IILjava/lang/String;[IIZ)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setKernelLocalVariable
  (JNIEnv *, jobject, jint, jint, jstring, jintArray, jint, jboolean);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setKernelLocalVariableBuffer
 * Signature: (IILjava/nio/ByteBuffer;)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setKernelLocalVariableBuffer
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setKernelConfigurationParameters
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setKernelConfigurationParameters
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setKernelConfigurationParameterAsInt
 * Signature: (IILjava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setKernelConfigurationParameterAsInt
  (JNIEnv *, jobject, jint, jint, jstring, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setKernelConfigurationParameterAsFloat
 * Signature: (IILjava/lang/String;F)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setKernelConfigurationParameterAsFloat
  (JNIEnv *, jobject, jint, jint, jstring, jfloat);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setKernelConfigurationParameterAsIntArray
 * Signature: (IILjava/lang/String;[I)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setKernelConfigurationParameterAsIntArray
  (JNIEnv *, jobject, jint, jint, jstring, jintArray);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setKernelConfigurationParameterAsFloatArray
 * Signature: (IILjava/lang/String;[F)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setKernelConfigurationParameterAsFloatArray
  (JNIEnv *, jobject, jint, jint, jstring, jfloatArray);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setKernelConfigurationParameterAsDouble
 * Signature: (IILjava/lang/String;D)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setKernelConfigurationParameterAsDouble
  (JNIEnv *, jobject, jint, jint, jstring, jdouble);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setKernelScalars
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setKernelScalars
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setKernelScalarAsInt
 * Signature: (IILjava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setKernelScalarAsInt
  (JNIEnv *, jobject, jint, jint, jstring, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setKernelScalarAsFloat
 * Signature: (IILjava/lang/String;F)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setKernelScalarAsFloat
  (JNIEnv *, jobject, jint, jint, jstring, jfloat);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setKernelScalarAsDouble
 * Signature: (IILjava/lang/String;D)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setKernelScalarAsDouble
  (JNIEnv *, jobject, jint, jint, jstring, jdouble);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    cudnnSetKernelType
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_cudnnSetKernelType
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    cudnnSetKernelInputDescriptor
 * Signature: (IIIII)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_cudnnSetKernelInputDescriptor
  (JNIEnv *, jobject, jint, jint, jint, jint, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    cudnnSetKernelOutputDescriptor
 * Signature: (IIIII)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_cudnnSetKernelOutputDescriptor
  (JNIEnv *, jobject, jint, jint, jint, jint, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    cudnnSetConvolutionDescriptor
 * Signature: (IIIII)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_cudnnSetConvolutionDescriptor
  (JNIEnv *, jobject, jint, jint, jint, jint, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    cudnnSetConvolutionFilterDescriptor
 * Signature: (IIIII)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_cudnnSetConvolutionFilterDescriptor
  (JNIEnv *, jobject, jint, jint, jint, jint, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    cudnnSetConvolutionBiasDescriptor
 * Signature: (IIIII)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_cudnnSetConvolutionBiasDescriptor
  (JNIEnv *, jobject, jint, jint, jint, jint, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    cudnnConfigureConvolutionForwardAlgorithm
 * Signature: (IID)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_cudnnConfigureConvolutionForwardAlgorithm
  (JNIEnv *, jobject, jint, jint, jdouble);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    cudnnConfigureConvolutionBackwardFilterAlgorithm
 * Signature: (IID)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_cudnnConfigureConvolutionBackwardFilterAlgorithm
  (JNIEnv *, jobject, jint, jint, jdouble);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    cudnnConfigureConvolutionBackwardDataAlgorithm
 * Signature: (IID)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_cudnnConfigureConvolutionBackwardDataAlgorithm
  (JNIEnv *, jobject, jint, jint, jdouble);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    cudnnSetPoolingMode
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_cudnnSetPoolingMode
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    cudnnSetPoolingDescriptor
 * Signature: (IIIIIII)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_cudnnSetPoolingDescriptor
  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    cudnnSetActivationDescriptor
 * Signature: (IID)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_cudnnSetActivationDescriptor
  (JNIEnv *, jobject, jint, jint, jdouble);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    cudnnSetBatchNormDescriptor
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_cudnnSetBatchNormDescriptor
  (JNIEnv *, jobject, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    cudnnSetBatchNormEstimatedMeanAndVariance
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_cudnnSetBatchNormEstimatedMeanAndVariance
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    cudnnSetDropoutDescriptor
 * Signature: (IFJ)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_cudnnSetDropoutDescriptor
  (JNIEnv *, jobject, jint, jfloat, jlong);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    cudnnGetDropoutReserveSpaceSize
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_cudnnGetDropoutReserveSpaceSize
  (JNIEnv *, jobject, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setDataflowGraph
 * Signature: (I[I)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setDataflowGraph
  (JNIEnv *, jobject, jint, jintArray);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setDataflowStream
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setDataflowStream
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setDataflowDependency
 * Signature: (IIIIZ)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setDataflowDependency
  (JNIEnv *, jobject, jint, jint, jint, jint, jboolean);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setDataflowUpstreamNeighbours
 * Signature: (II[I)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setDataflowUpstreamNeighbours
  (JNIEnv *, jobject, jint, jint, jintArray);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setDataflowDownstreamNeighbours
 * Signature: (II[I)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setDataflowDownstreamNeighbours
  (JNIEnv *, jobject, jint, jint, jintArray);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setDataflowLossOperator
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setDataflowLossOperator
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setDataflowAccuracyOperator
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setDataflowAccuracyOperator
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setDataflowDataTransformOperator
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setDataflowDataTransformOperator
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setDataflowPeers
 * Signature: (I[I)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setDataflowPeers
  (JNIEnv *, jobject, jint, jintArray);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setDataflowMemoryPlan
 * Signature: (IIII)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setDataflowMemoryPlan
  (JNIEnv *, jobject, jint, jint, jint, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setModel
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setModel
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setModelVariable
 * Signature: (II[II)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setModelVariable
  (JNIEnv *, jobject, jint, jint, jintArray, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setModelVariableBuffer
 * Signature: (IILjava/nio/ByteBuffer;)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setModelVariableBuffer
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setModelVariableLearningRateMultiplier
 * Signature: (IIF)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setModelVariableLearningRateMultiplier
  (JNIEnv *, jobject, jint, jint, jfloat);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setModelWorkPerClock
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setModelWorkPerClock
  (JNIEnv *, jobject, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setUpdateModelType
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setUpdateModelType
  (JNIEnv *, jobject, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setLearningRateDecayPolicyFixed
 * Signature: (F)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setLearningRateDecayPolicyFixed
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setLearningRateDecayPolicyInv
 * Signature: (FDD)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setLearningRateDecayPolicyInv
  (JNIEnv *, jobject, jfloat, jdouble, jdouble);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setLearningRateDecayPolicyStep
 * Signature: (FDI)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setLearningRateDecayPolicyStep
  (JNIEnv *, jobject, jfloat, jdouble, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setLearningRateDecayPolicyMultiStep
 * Signature: (FDI[I)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setLearningRateDecayPolicyMultiStep
  (JNIEnv *, jobject, jfloat, jdouble, jint, jintArray);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setLearningRateDecayPolicyExp
 * Signature: (FD)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setLearningRateDecayPolicyExp
  (JNIEnv *, jobject, jfloat, jdouble);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setLearningRateDecayPolicyCircular
 * Signature: ([FI[FI)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setLearningRateDecayPolicyCircular
  (JNIEnv *, jobject, jfloatArray, jint, jfloatArray, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setBaseModelMomentum
 * Signature: (F)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setBaseModelMomentum
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setMomentum
 * Signature: (FI)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setMomentum
  (JNIEnv *, jobject, jfloat, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setWeightDecay
 * Signature: (F)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setWeightDecay
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setEamsgdAlpha
 * Signature: (F)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setEamsgdAlpha
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setEamsgdTau
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setEamsgdTau
  (JNIEnv *, jobject, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setModelManager
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setModelManager
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    acquireAccess
 * Signature: ([I)Ljava/lang/Integer;
 */
JNIEXPORT jobject JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_acquireAccess
  (JNIEnv *, jobject, jintArray);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    release
 * Signature: (Ljava/lang/Integer;)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_release
  (JNIEnv *, jobject, jobject);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    upgradeAccess
 * Signature: (Ljava/lang/Integer;[I)Ljava/lang/Integer;
 */
JNIEXPORT jobject JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_upgradeAccess
  (JNIEnv *, jobject, jobject, jintArray);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    execute
 * Signature: (IILuk/ac/imperial/lsds/crossbow/data/IDataBuffer;IILuk/ac/imperial/lsds/crossbow/data/IDataBuffer;II[JILjava/lang/Integer;)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_execute
  (JNIEnv *, jobject, jint, jint, jobject, jint, jint, jobject, jint, jint, jlongArray, jint, jobject);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    executeNext
 * Signature: (IIIIII[JILjava/lang/Integer;)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_executeNext
  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jlongArray, jint, jobject);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    schedule
 * Signature: (IILuk/ac/imperial/lsds/crossbow/data/MappedDataBuffer;JJLuk/ac/imperial/lsds/crossbow/data/MappedDataBuffer;JJ[JII)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_schedule
  (JNIEnv *, jobject, jint, jint, jobject, jlong, jlong, jobject, jlong, jlong, jlongArray, jint, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    scheduleNext
 * Signature: (IIJJJJ[JII)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_scheduleNext
  (JNIEnv *, jobject, jint, jint, jlong, jlong, jlong, jlong, jlongArray, jint, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setResultHandler
 * Signature: (ILjava/nio/ByteBuffer;I)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setResultHandler
  (JNIEnv *, jobject, jint, jobject, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    setLightWeightDatasetHandler
 * Signature: (ILjava/nio/ByteBuffer;I)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_setLightWeightDatasetHandler
  (JNIEnv *, jobject, jint, jobject, jint);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    lockAny
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_lockAny
  (JNIEnv *, jobject);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    merge
 * Signature: (Z)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_merge
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    synchronise
 * Signature: (IIIZ)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_synchronise
  (JNIEnv *, jobject, jint, jint, jint, jboolean);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    unlockAny
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_unlockAny
  (JNIEnv *, jobject);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    checkpointModel
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_checkpointModel
  (JNIEnv *, jobject, jstring);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    overrideModelData
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_overrideModelData
  (JNIEnv *, jobject, jstring);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    addModel
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_addModel
  (JNIEnv *, jobject);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    delModel
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_delModel
  (JNIEnv *, jobject);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    recordDatasetInit
 * Signature: (II[III[I)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_recordDatasetInit
  (JNIEnv *, jobject, jint, jint, jintArray, jint, jint, jintArray);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    recordDatasetRegister
 * Signature: (IILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_recordDatasetRegister
  (JNIEnv *, jobject, jint, jint, jstring);

/*
 * Class:     uk_ac_imperial_lsds_crossbow_device_TheGPU
 * Method:    recordDatasetFinalise
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_imperial_lsds_crossbow_device_TheGPU_recordDatasetFinalise
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
